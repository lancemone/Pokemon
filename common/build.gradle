plugins {
    id 'com.android.library'
}

android {
    namespace 'com.timothy.common'
    compileSdk buildVersion.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk buildVersion.versions.minSdk.get().toInteger()
        targetSdk buildVersion.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        // 开启 Dex 分包
        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation(libs.kotlin.stdlibJdk8.get()){
        because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        because("解决kotlib 1.6和1.8版本冲突")
    }

    api fileTree(include: ['*.jar'], dir: 'libs')
    api project(':resource')
    api libs.bundles.androidx.get()
    api libs.bundles.lifecycle.get()
    api libs.coordinatorlayout.get()
    implementation libs.customview.customview.get()
    implementation libs.customview.poolingcontainer.get()

    api libs.google.material.get()
    api libs.google.gson.get()
    api libs.tencent.mmkv.get()
    api libs.alibaba.arouter.api.get()
    annotationProcessor libs.alibaba.arouter.compiler
    api libs.glide.glide.get()
    annotationProcessor libs.glide.compiler.get()
    api libs.logger.get()
    api libs.bundles.smartRefresh.get()
    api libs.loadsir.get()
    testImplementation libs.test.junit.get()
    androidTestImplementation libs.test.ext.get()
    androidTestImplementation libs.test.espresso.get()

    api libs.androidx.multidex.get()
}